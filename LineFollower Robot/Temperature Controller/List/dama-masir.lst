
AVRASM ver. 2.1.30  E:\New folder (2)\List\dama-masir.asm Mon Feb 14 14:52:33 2011

E:\New folder (2)\List\dama-masir.asm(1051): warning: Register r5 already defined by the .DEF directive
E:\New folder (2)\List\dama-masir.asm(1052): warning: Register r4 already defined by the .DEF directive
E:\New folder (2)\List\dama-masir.asm(1053): warning: Register r7 already defined by the .DEF directive
E:\New folder (2)\List\dama-masir.asm(1054): warning: Register r6 already defined by the .DEF directive
E:\New folder (2)\List\dama-masir.asm(1055): warning: Register r9 already defined by the .DEF directive
E:\New folder (2)\List\dama-masir.asm(1056): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : No
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R5
                 	.DEF _k=R4
                 	.DEF _line=R7
                 	.DEF __lcd_x=R6
                 	.DEF __lcd_y=R9
                 	.DEF __lcd_maxx=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 c031      	RJMP __RESET
000001 c05f      	RJMP _sensor1
000002 c062      	RJMP _sensor2
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G102:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G102:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001c 6574
00001d 706d
00001e 6920
00001f 3a73      	.DB  0x74,0x65,0x6D,0x70,0x20,0x69,0x73,0x3A
000020 6c00
000021 6e69
000022 2065
000023 7369      	.DB  0x0,0x6C,0x69,0x6E,0x65,0x20,0x69,0x73
000024 003a
000025 0020      	.DB  0x3A,0x0,0x20,0x0
                 _0x2000003:
000026 c080      	.DB  0x80,0xC0
                 _0x202005F:
E:\New folder (2)\List\dama-masir.asm(1095): warning: .cseg .db misalignment - padding zero byte
000027 0001      	.DB  0x1
                 _0x2020000:
000028 4e2d
000029 4e41
E:\New folder (2)\List\dama-masir.asm(1097): warning: .cseg .db misalignment - padding zero byte
00002a 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
00002b 0002      	.DW  0x02
00002c 0192      	.DW  __base_y_G100
00002d 004c      	.DW  _0x2000003*2
                 
00002e 0001      	.DW  0x01
00002f 0196      	.DW  __seed_G101
000030 004e      	.DW  _0x202005F*2
                 
                 _0xFFFFFFFF:
000031 0000      	.DW  0
                 
                 __RESET:
000032 94f8      	CLI
000033 27ee      	CLR  R30
000034 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000035 e0f1      	LDI  R31,1
000036 bffb      	OUT  GICR,R31
000037 bfeb      	OUT  GICR,R30
000038 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000039 e1f8      	LDI  R31,0x18
00003a bdf1      	OUT  WDTCR,R31
00003b bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00003c e08d      	LDI  R24,(14-2)+1
00003d e0a2      	LDI  R26,2
00003e 27bb      	CLR  R27
                 __CLEAR_REG:
00003f 93ed      	ST   X+,R30
000040 958a      	DEC  R24
000041 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000042 e080      	LDI  R24,LOW(0x400)
000043 e094      	LDI  R25,HIGH(0x400)
000044 e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
000045 93ed      	ST   X+,R30
000046 9701      	SBIW R24,1
000047 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000048 e5e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000049 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00004a 9185      	LPM  R24,Z+
00004b 9195      	LPM  R25,Z+
00004c 9700      	SBIW R24,0
00004d f061      	BREQ __GLOBAL_INI_END
00004e 91a5      	LPM  R26,Z+
00004f 91b5      	LPM  R27,Z+
000050 9005      	LPM  R0,Z+
000051 9015      	LPM  R1,Z+
000052 01bf      	MOVW R22,R30
000053 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000054 9005      	LPM  R0,Z+
000055 920d      	ST   X+,R0
000056 9701      	SBIW R24,1
000057 f7e1      	BRNE __GLOBAL_INI_LOOP
000058 01fb      	MOVW R30,R22
000059 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;STACK POINTER INITIALIZATION
00005a e5ef      	LDI  R30,LOW(0x45F)
00005b bfed      	OUT  SPL,R30
00005c e0e4      	LDI  R30,HIGH(0x45F)
00005d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005e e6c0      	LDI  R28,LOW(0x160)
00005f e0d1      	LDI  R29,HIGH(0x160)
                 
000060 c016      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#asm
                    .equ __lcd_port=0x18 ;PORTB
                 ; 0000 0004 #endasm
                 ;#include <lcd.h>
                 ;
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#define ADC_VREF_TYPE 0x00
                 ;unsigned char i,k;
                 ;interrupt[2]void sensor1(void)
                 ; 0000 000D { i++;
                 
                 	.CSEG
                 _sensor1:
000061 93ea      	ST   -Y,R30
000062 b7ef      	IN   R30,SREG
000063 9453      	INC  R5
                 ; 0000 000E }
000064 c003      	RJMP _0xA
                 ;interrupt[3]void sensor2 (void)
                 ; 0000 0010 {
                 _sensor2:
000065 93ea      	ST   -Y,R30
000066 b7ef      	IN   R30,SREG
                 ; 0000 0011 k++;
000067 9443      	INC  R4
                 ; 0000 0012 }
                 _0xA:
000068 bfef      	OUT  SREG,R30
000069 91e9      	LD   R30,Y+
00006a 9518      	RETI
                 ;
                 ;unsigned char line;
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0016 {
                 _read_adc:
                 ; 0000 0017 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
00006b 81e8      	LD   R30,Y
00006c b9e7      	OUT  0x7,R30
                 ; 0000 0018 delay_us(10);
                +
00006d e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00006e 958a     +DEC R24
00006f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0019 ADCSRA|=0x40;
000070 9a36      	SBI  0x6,6
                 ; 0000 001A while ((ADCSRA & 0x10)==0);
                 _0x3:
000071 9b34      	SBIS 0x6,4
000072 cffe      	RJMP _0x3
                 ; 0000 001B ADCSRA|=0x10;
000073 9a34      	SBI  0x6,4
                 ; 0000 001C return ADCW;
000074 b1e4      	IN   R30,0x4
000075 b1f5      	IN   R31,0x4+1
000076 c170      	RJMP _0x20C0001
                 ; 0000 001D }
                 ;long int adc1, adc2, adc3, adc4;
                 ;float adc0;
                 ; unsigned char str[15];
                 ; unsigned char str1[15];
                 ;
                 ;void main(void)
                 ; 0000 0024 { DDRD=0x00;
                 _main:
000077 e0e0      	LDI  R30,LOW(0)
000078 bbe1      	OUT  0x11,R30
                 ; 0000 0025 PORTD=0x00;
000079 bbe2      	OUT  0x12,R30
                 ; 0000 0026 GICR=0b11000000;
00007a ece0      	LDI  R30,LOW(192)
00007b bfeb      	OUT  0x3B,R30
                 ; 0000 0027 MCUCSR=0b00001111;
00007c e0ef      	LDI  R30,LOW(15)
00007d bfe4      	OUT  0x34,R30
                 ; 0000 0028 #asm("sei")
00007e 9478      	sei
                 ; 0000 0029 ADMUX=ADC_VREF_TYPE & 0xff;
00007f e0e0      	LDI  R30,LOW(0)
000080 b9e7      	OUT  0x7,R30
                 ; 0000 002A ADCSRA=0x86;
000081 e8e6      	LDI  R30,LOW(134)
000082 b9e6      	OUT  0x6,R30
                 ; 0000 002B lcd_init(16);
000083 e1e0      	LDI  R30,LOW(16)
000084 93ea      	ST   -Y,R30
000085 d137      	RCALL _lcd_init
                 ; 0000 002C lcd_gotoxy(0,0);
000086 d18e      	RCALL SUBOPT_0x0
000087 d18d      	RCALL SUBOPT_0x0
000088 d0d6      	RCALL _lcd_gotoxy
                 ; 0000 002D lcd_putsf("temp is:");
                +
000089 e3e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00008a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00008b d18c      	RCALL SUBOPT_0x1
                 ; 0000 002E lcd_gotoxy(0,1);
00008c d188      	RCALL SUBOPT_0x0
00008d e0e1      	LDI  R30,LOW(1)
00008e 93ea      	ST   -Y,R30
00008f d0cf      	RCALL _lcd_gotoxy
                 ; 0000 002F lcd_putsf("line is:");
                +
000090 e4e1     +LDI R30 , LOW ( 2 * _0x0 + ( 9 ) )
000091 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 9 ) )
                 	__POINTW1FN _0x0,9
000092 d185      	RCALL SUBOPT_0x1
                 ; 0000 0030 while (1)
                 _0x6:
                 ; 0000 0031       {
                 ; 0000 0032        delay_ms(250);
000093 d187      	RCALL SUBOPT_0x2
                 ; 0000 0033        adc1=read_adc(2);
000094 93e0 0160 	STS  _adc1,R30
000096 93f0 0161 	STS  _adc1+1,R31
000098 9360 0162 	STS  _adc1+2,R22
00009a 9370 0163 	STS  _adc1+3,R23
                 ; 0000 0034        delay_ms(250);
00009c d17e      	RCALL SUBOPT_0x2
                 ; 0000 0035        adc2=read_adc(2);
00009d 93e0 0164 	STS  _adc2,R30
00009f 93f0 0165 	STS  _adc2+1,R31
0000a1 9360 0166 	STS  _adc2+2,R22
0000a3 9370 0167 	STS  _adc2+3,R23
                 ; 0000 0036        delay_ms(250);
0000a5 d175      	RCALL SUBOPT_0x2
                 ; 0000 0037        adc3=read_adc(2);
0000a6 93e0 0168 	STS  _adc3,R30
0000a8 93f0 0169 	STS  _adc3+1,R31
0000aa 9360 016a 	STS  _adc3+2,R22
0000ac 9370 016b 	STS  _adc3+3,R23
                 ; 0000 0038        delay_ms(250);
0000ae d16c      	RCALL SUBOPT_0x2
                 ; 0000 0039        adc4=read_adc(2);
0000af 93e0 016c 	STS  _adc4,R30
0000b1 93f0 016d 	STS  _adc4+1,R31
0000b3 9360 016e 	STS  _adc4+2,R22
0000b5 9370 016f 	STS  _adc4+3,R23
                 ; 0000 003A        adc0=adc1+adc2;
0000b7 91e0 0164 	LDS  R30,_adc2
0000b9 91f0 0165 	LDS  R31,_adc2+1
0000bb 9160 0166 	LDS  R22,_adc2+2
0000bd 9170 0167 	LDS  R23,_adc2+3
0000bf 91a0 0160 	LDS  R26,_adc1
0000c1 91b0 0161 	LDS  R27,_adc1+1
0000c3 9180 0162 	LDS  R24,_adc1+2
0000c5 9190 0163 	LDS  R25,_adc1+3
0000c7 d2d0      	RCALL __ADDD12
0000c8 e7a0      	LDI  R26,LOW(_adc0)
0000c9 e0b1      	LDI  R27,HIGH(_adc0)
0000ca d205      	RCALL __CDF1
0000cb d2d9      	RCALL __PUTDP1
                 ; 0000 003B        adc0=adc0+adc3;
0000cc 91e0 0168 	LDS  R30,_adc3
0000ce 91f0 0169 	LDS  R31,_adc3+1
0000d0 9160 016a 	LDS  R22,_adc3+2
0000d2 9170 016b 	LDS  R23,_adc3+3
0000d4 d151      	RCALL SUBOPT_0x3
                 ; 0000 003C        adc0=adc0+adc4;
0000d5 91e0 016c 	LDS  R30,_adc4
0000d7 91f0 016d 	LDS  R31,_adc4+1
0000d9 9160 016e 	LDS  R22,_adc4+2
0000db 9170 016f 	LDS  R23,_adc4+3
0000dd d148      	RCALL SUBOPT_0x3
                 ; 0000 003D        adc0=adc0/4;
0000de d15a      	RCALL SUBOPT_0x4
                +
0000df e0e0     +LDI R30 , LOW ( 0x40800000 )
0000e0 e0f0     +LDI R31 , HIGH ( 0x40800000 )
0000e1 e860     +LDI R22 , BYTE3 ( 0x40800000 )
0000e2 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
0000e3 d15e      	RCALL SUBOPT_0x5
                 ; 0000 003E        adc0=adc0/2.046;
0000e4 d154      	RCALL SUBOPT_0x4
                +
0000e5 eaea     +LDI R30 , LOW ( 0x4002F1AA )
0000e6 eff1     +LDI R31 , HIGH ( 0x4002F1AA )
0000e7 e062     +LDI R22 , BYTE3 ( 0x4002F1AA )
0000e8 e470     +LDI R23 , BYTE4 ( 0x4002F1AA )
                 	__GETD1N 0x4002F1AA
0000e9 d158      	RCALL SUBOPT_0x5
                 ; 0000 003F        adc0=adc0+2;
0000ea d161      	RCALL SUBOPT_0x6
                +
0000eb e0a0     +LDI R26 , LOW ( 0x40000000 )
0000ec e0b0     +LDI R27 , HIGH ( 0x40000000 )
0000ed e080     +LDI R24 , BYTE3 ( 0x40000000 )
0000ee e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
0000ef d213      	RCALL __ADDF12
0000f0 93e0 0170 	STS  _adc0,R30
0000f2 93f0 0171 	STS  _adc0+1,R31
0000f4 9360 0172 	STS  _adc0+2,R22
0000f6 9370 0173 	STS  _adc0+3,R23
                 ; 0000 0040        line=(i+k)/2;
0000f8 2de4      	MOV  R30,R4
0000f9 0de5      	ADD  R30,R5
0000fa 95e6      	LSR  R30
0000fb 2e7e      	MOV  R7,R30
                 ; 0000 0041        line=line*12;
0000fc e0ac      	LDI  R26,LOW(12)
0000fd 9e7a      	MUL  R7,R26
0000fe 2c70      	MOV  R7,R0
                 ; 0000 0042        lcd_gotoxy(9,0);
0000ff e0e9      	LDI  R30,LOW(9)
000100 93ea      	ST   -Y,R30
000101 d113      	RCALL SUBOPT_0x0
000102 d05c      	RCALL _lcd_gotoxy
                 ; 0000 0043        lcd_putsf(" ");
                +
000103 e4ea     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
000104 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
000105 d112      	RCALL SUBOPT_0x1
                 ; 0000 0044        itoa(adc0,str);
000106 d145      	RCALL SUBOPT_0x6
000107 d191      	RCALL __CFD1
000108 d14c      	RCALL SUBOPT_0x7
000109 e7e4      	LDI  R30,LOW(_str)
00010a e0f1      	LDI  R31,HIGH(_str)
00010b d149      	RCALL SUBOPT_0x7
00010c d0dc      	RCALL _itoa
                 ; 0000 0045        lcd_puts(str);
00010d e7e4      	LDI  R30,LOW(_str)
00010e e0f1      	LDI  R31,HIGH(_str)
00010f d145      	RCALL SUBOPT_0x7
000110 d07f      	RCALL _lcd_puts
                 ; 0000 0046        lcd_gotoxy(9,1);
000111 e0e9      	LDI  R30,LOW(9)
000112 93ea      	ST   -Y,R30
000113 e0e1      	LDI  R30,LOW(1)
000114 93ea      	ST   -Y,R30
000115 d049      	RCALL _lcd_gotoxy
                 ; 0000 0047        itoa(line,str1);
000116 2de7      	MOV  R30,R7
000117 e0f0      	LDI  R31,0
000118 d13c      	RCALL SUBOPT_0x7
000119 e8e3      	LDI  R30,LOW(_str1)
00011a e0f1      	LDI  R31,HIGH(_str1)
00011b d139      	RCALL SUBOPT_0x7
00011c d0cc      	RCALL _itoa
                 ; 0000 0048        lcd_putsf(" ");
                +
00011d e4ea     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
00011e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
00011f d0f8      	RCALL SUBOPT_0x1
                 ; 0000 0049        lcd_puts(str1);
000120 e8e3      	LDI  R30,LOW(_str1)
000121 e0f1      	LDI  R31,HIGH(_str1)
000122 d132      	RCALL SUBOPT_0x7
000123 d06c      	RCALL _lcd_puts
                 ; 0000 004A 
                 ; 0000 004B       };
000124 cf6e      	RJMP _0x6
                 ; 0000 004C }
                 _0x9:
000125 cfff      	RJMP _0x9
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G100:
000126 e0ff          ldi   r31,15
                 __lcd_delay0:
000127 95fa          dec   r31
000128 f7f1          brne  __lcd_delay0
000129 9508      	RET
                 __lcd_ready:
00012a b3a7          in    r26,__lcd_direction
00012b 70af          andi  r26,0xf                 ;set as input
00012c bba7          out   __lcd_direction,r26
00012d 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
00012e 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
00012f dff6      	RCALL __lcd_delay_G100
000130 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000131 dff4      	RCALL __lcd_delay_G100
000132 b3a6          in    r26,__lcd_pin
000133 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000134 dff1      	RCALL __lcd_delay_G100
000135 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000136 dfef      	RCALL __lcd_delay_G100
000137 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000138 fda7          sbrc  r26,__lcd_busy_flag
000139 cff5          rjmp  __lcd_busy
00013a 9508      	RET
                 __lcd_write_nibble_G100:
00013b 7fa0          andi  r26,0xf0
00013c 2bab          or    r26,r27
00013d bba8          out   __lcd_port,r26          ;write
00013e 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
00013f dfe6      	RCALL __lcd_delay_G100
000140 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000141 dfe4      	RCALL __lcd_delay_G100
000142 9508      	RET
                 __lcd_write_data:
000143 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000144 b3a7          in    r26,__lcd_direction
000145 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000146 bba7          out   __lcd_direction,r26
000147 b3b8          in    r27,__lcd_port
000148 70bf          andi  r27,0xf
000149 81a8          ld    r26,y
00014a dff0      	RCALL __lcd_write_nibble_G100
00014b 81a8          ld    r26,y
00014c 95a2          swap  r26
00014d dfed      	RCALL __lcd_write_nibble_G100
00014e 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
00014f c097      	RJMP _0x20C0001
                 __lcd_read_nibble_G100:
000150 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000151 dfd4      	RCALL __lcd_delay_G100
000152 b3e6          in    r30,__lcd_pin           ;read
000153 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000154 dfd1      	RCALL __lcd_delay_G100
000155 7fe0          andi  r30,0xf0
000156 9508      	RET
                 _lcd_read_byte0_G100:
000157 dfce      	RCALL __lcd_delay_G100
000158 dff7      	RCALL __lcd_read_nibble_G100
000159 2fae          mov   r26,r30
00015a dff5      	RCALL __lcd_read_nibble_G100
00015b 98c1          cbi   __lcd_port,__lcd_rd     ;RD=0
00015c 95e2          swap  r30
00015d 2bea          or    r30,r26
00015e 9508      	RET
                 _lcd_gotoxy:
00015f dfca      	RCALL __lcd_ready
000160 81e8      	LD   R30,Y
000161 e0f0      	LDI  R31,0
000162 56ee      	SUBI R30,LOW(-__base_y_G100)
000163 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000164 81e0      	LD   R30,Z
000165 81a9      	LDD  R26,Y+1
000166 0fea      	ADD  R30,R26
000167 d0f0      	RCALL SUBOPT_0x8
000168 8069      	LDD  R6,Y+1
000169 8098      	LDD  R9,Y+0
00016a 9622      	ADIW R28,2
00016b 9508      	RET
                 _lcd_clear:
00016c dfbd      	RCALL __lcd_ready
00016d e0e2      	LDI  R30,LOW(2)
00016e d0e9      	RCALL SUBOPT_0x8
00016f dfba      	RCALL __lcd_ready
000170 e0ec      	LDI  R30,LOW(12)
000171 d0e6      	RCALL SUBOPT_0x8
000172 dfb7      	RCALL __lcd_ready
000173 e0e1      	LDI  R30,LOW(1)
000174 d0e3      	RCALL SUBOPT_0x8
000175 e0e0      	LDI  R30,LOW(0)
000176 2e9e      	MOV  R9,R30
000177 2e6e      	MOV  R6,R30
000178 9508      	RET
                 _lcd_putchar:
000179 93ef          push r30
00017a 93ff          push r31
00017b 81a8          ld   r26,y
00017c 9468          set
00017d 30aa          cpi  r26,10
00017e f019          breq __lcd_putchar1
00017f 94e8          clt
000180 1468      	CP   R6,R8
000181 f028      	BRLO _0x2000004
                 	__lcd_putchar1:
000182 9493      	INC  R9
000183 d091      	RCALL SUBOPT_0x0
000184 929a      	ST   -Y,R9
000185 dfd9      	RCALL _lcd_gotoxy
000186 f036      	brts __lcd_putchar0
                 _0x2000004:
000187 9463      	INC  R6
000188 dfa1          rcall __lcd_ready
000189 9ac0          sbi  __lcd_port,__lcd_rs ;RS=1
00018a 81a8          ld   r26,y
00018b 93aa          st   -y,r26
00018c dfb6          rcall __lcd_write_data
                 __lcd_putchar0:
00018d 91ff          pop  r31
00018e 91ef          pop  r30
00018f c057      	RJMP _0x20C0001
                 _lcd_puts:
000190 931a      	ST   -Y,R17
                 _0x2000005:
000191 81a9      	LDD  R26,Y+1
000192 81ba      	LDD  R27,Y+1+1
000193 91ed      	LD   R30,X+
000194 83a9      	STD  Y+1,R26
000195 83ba      	STD  Y+1+1,R27
000196 2f1e      	MOV  R17,R30
000197 30e0      	CPI  R30,0
000198 f019      	BREQ _0x2000007
000199 931a      	ST   -Y,R17
00019a dfde      	RCALL _lcd_putchar
00019b cff5      	RJMP _0x2000005
                 _0x2000007:
00019c c00e      	RJMP _0x20C0002
                 _lcd_putsf:
00019d 931a      	ST   -Y,R17
                 _0x2000008:
00019e 81e9      	LDD  R30,Y+1
00019f 81fa      	LDD  R31,Y+1+1
0001a0 9631      	ADIW R30,1
0001a1 83e9      	STD  Y+1,R30
0001a2 83fa      	STD  Y+1+1,R31
0001a3 9731      	SBIW R30,1
0001a4 91e4      	LPM  R30,Z
0001a5 2f1e      	MOV  R17,R30
0001a6 30e0      	CPI  R30,0
0001a7 f019      	BREQ _0x200000A
0001a8 931a      	ST   -Y,R17
0001a9 dfcf      	RCALL _lcd_putchar
0001aa cff3      	RJMP _0x2000008
                 _0x200000A:
                 _0x20C0002:
0001ab 8118      	LDD  R17,Y+0
0001ac 9623      	ADIW R28,3
0001ad 9508      	RET
                 __long_delay_G100:
0001ae 27aa          clr   r26
0001af 27bb          clr   r27
                 __long_delay0:
0001b0 9711          sbiw  r26,1         ;2 cycles
0001b1 f7f1          brne  __long_delay0 ;2 cycles
0001b2 9508      	RET
                 __lcd_init_write_G100:
0001b3 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0001b4 b3a7          in    r26,__lcd_direction
0001b5 6fa7          ori   r26,0xf7                ;set as output
0001b6 bba7          out   __lcd_direction,r26
0001b7 b3b8          in    r27,__lcd_port
0001b8 70bf          andi  r27,0xf
0001b9 81a8          ld    r26,y
0001ba df80      	RCALL __lcd_write_nibble_G100
0001bb 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
0001bc c02a      	RJMP _0x20C0001
                 _lcd_init:
0001bd 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
0001be 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
0001bf 8088      	LDD  R8,Y+0
0001c0 81e8      	LD   R30,Y
0001c1 58e0      	SUBI R30,-LOW(128)
                +
0001c2 93e0 0194+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001c4 81e8      	LD   R30,Y
0001c5 54e0      	SUBI R30,-LOW(192)
                +
0001c6 93e0 0195+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001c8 d091      	RCALL SUBOPT_0x9
0001c9 d090      	RCALL SUBOPT_0x9
0001ca d08f      	RCALL SUBOPT_0x9
0001cb dfe2      	RCALL __long_delay_G100
0001cc e2e0      	LDI  R30,LOW(32)
0001cd 93ea      	ST   -Y,R30
0001ce dfe4      	RCALL __lcd_init_write_G100
0001cf dfde      	RCALL __long_delay_G100
0001d0 e2e8      	LDI  R30,LOW(40)
0001d1 d086      	RCALL SUBOPT_0x8
0001d2 dfdb      	RCALL __long_delay_G100
0001d3 e0e4      	LDI  R30,LOW(4)
0001d4 d083      	RCALL SUBOPT_0x8
0001d5 dfd8      	RCALL __long_delay_G100
0001d6 e8e5      	LDI  R30,LOW(133)
0001d7 d080      	RCALL SUBOPT_0x8
0001d8 dfd5      	RCALL __long_delay_G100
0001d9 b3a7          in    r26,__lcd_direction
0001da 70af          andi  r26,0xf                 ;set as input
0001db bba7          out   __lcd_direction,r26
0001dc 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
0001dd df79      	RCALL _lcd_read_byte0_G100
0001de 30e5      	CPI  R30,LOW(0x5)
0001df f011      	BREQ _0x200000B
0001e0 e0e0      	LDI  R30,LOW(0)
0001e1 c005      	RJMP _0x20C0001
                 _0x200000B:
0001e2 df47      	RCALL __lcd_ready
0001e3 e0e6      	LDI  R30,LOW(6)
0001e4 d073      	RCALL SUBOPT_0x8
0001e5 df86      	RCALL _lcd_clear
0001e6 e0e1      	LDI  R30,LOW(1)
                 _0x20C0001:
0001e7 9621      	ADIW R28,1
0001e8 9508      	RET
                 
                 	.CSEG
                 _itoa:
0001e9 91a9          ld   r26,y+
0001ea 91b9          ld   r27,y+
0001eb 91e9          ld   r30,y+
0001ec 91f9          ld   r31,y+
0001ed 9630          adiw r30,0
0001ee f42a          brpl __itoa0
0001ef 95e0          com  r30
0001f0 95f0          com  r31
0001f1 9631          adiw r30,1
0001f2 e26d          ldi  r22,'-'
0001f3 936d          st   x+,r22
                 __itoa0:
0001f4 94e8          clt
0001f5 e180          ldi  r24,low(10000)
0001f6 e297          ldi  r25,high(10000)
0001f7 d00d          rcall __itoa1
0001f8 ee88          ldi  r24,low(1000)
0001f9 e093          ldi  r25,high(1000)
0001fa d00a          rcall __itoa1
0001fb e684          ldi  r24,100
0001fc 2799          clr  r25
0001fd d007          rcall __itoa1
0001fe e08a          ldi  r24,10
0001ff d005          rcall __itoa1
000200 2f6e          mov  r22,r30
000201 d010          rcall __itoa5
000202 2766          clr  r22
000203 936c          st   x,r22
000204 9508          ret
                 
                 __itoa1:
000205 2766          clr	 r22
                 __itoa2:
000206 17e8          cp   r30,r24
000207 07f9          cpc  r31,r25
000208 f020          brlo __itoa3
000209 9563          inc  r22
00020a 1be8          sub  r30,r24
00020b 0bf9          sbc  r31,r25
00020c f7c9          brne __itoa2
                 __itoa3:
00020d 2366          tst  r22
00020e f411          brne __itoa4
00020f f016          brts __itoa5
000210 9508          ret
                 __itoa4:
000211 9468          set
                 __itoa5:
000212 5d60          subi r22,-0x30
000213 936d          st   x+,r22
000214 9508          ret
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _adc1:
000160           	.BYTE 0x4
                 _adc2:
000164           	.BYTE 0x4
                 _adc3:
000168           	.BYTE 0x4
                 _adc4:
00016c           	.BYTE 0x4
                 _adc0:
000170           	.BYTE 0x4
                 _str:
000174           	.BYTE 0xF
                 _str1:
000183           	.BYTE 0xF
                 __base_y_G100:
000192           	.BYTE 0x4
                 __seed_G101:
000196           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
000215 e0e0      	LDI  R30,LOW(0)
000216 93ea      	ST   -Y,R30
000217 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1:
000218 93fa      	ST   -Y,R31
000219 93ea      	ST   -Y,R30
00021a cf82      	RJMP _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2:
00021b efea      	LDI  R30,LOW(250)
00021c e0f0      	LDI  R31,HIGH(250)
00021d 93fa      	ST   -Y,R31
00021e 93ea      	ST   -Y,R30
00021f d03e      	RCALL _delay_ms
000220 e0e2      	LDI  R30,LOW(2)
000221 93ea      	ST   -Y,R30
000222 de48      	RCALL _read_adc
000223 2766      	CLR  R22
000224 2777      	CLR  R23
000225 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3:
000226 91a0 0170 	LDS  R26,_adc0
000228 91b0 0171 	LDS  R27,_adc0+1
00022a 9180 0172 	LDS  R24,_adc0+2
00022c 9190 0173 	LDS  R25,_adc0+3
00022e d0a1      	RCALL __CDF1
00022f d0d3      	RCALL __ADDF12
000230 93e0 0170 	STS  _adc0,R30
000232 93f0 0171 	STS  _adc0+1,R31
000234 9360 0172 	STS  _adc0+2,R22
000236 9370 0173 	STS  _adc0+3,R23
000238 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000239 91a0 0170 	LDS  R26,_adc0
00023b 91b0 0171 	LDS  R27,_adc0+1
00023d 9180 0172 	LDS  R24,_adc0+2
00023f 9190 0173 	LDS  R25,_adc0+3
000241 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000242 d110      	RCALL __DIVF21
000243 93e0 0170 	STS  _adc0,R30
000245 93f0 0171 	STS  _adc0+1,R31
000247 9360 0172 	STS  _adc0+2,R22
000249 9370 0173 	STS  _adc0+3,R23
00024b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
00024c 91e0 0170 	LDS  R30,_adc0
00024e 91f0 0171 	LDS  R31,_adc0+1
000250 9160 0172 	LDS  R22,_adc0+2
000252 9170 0173 	LDS  R23,_adc0+3
000254 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000255 93fa      	ST   -Y,R31
000256 93ea      	ST   -Y,R30
000257 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
000258 93ea      	ST   -Y,R30
000259 cee9      	RJMP __lcd_write_data
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x9:
00025a df53      	RCALL __long_delay_G100
00025b e3e0      	LDI  R30,LOW(48)
00025c 93ea      	ST   -Y,R30
00025d cf55      	RJMP __lcd_init_write_G100
                 
                 
                 	.CSEG
                 _delay_ms:
00025e 91e9      	ld   r30,y+
00025f 91f9      	ld   r31,y+
000260 9630      	adiw r30,0
000261 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000262 ed80     +LDI R24 , LOW ( 0x7D0 )
000263 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000264 9701     +SBIW R24 , 1
000265 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000266 95a8      	wdr
000267 9731      	sbiw r30,1
000268 f7c9      	brne __delay_ms0
                 __delay_ms1:
000269 9508      	ret
                 
                 __ROUND_REPACK:
00026a 2355      	TST  R21
00026b f442      	BRPL __REPACK
00026c 3850      	CPI  R21,0x80
00026d f411      	BRNE __ROUND_REPACK0
00026e ffe0      	SBRS R30,0
00026f c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000270 9631      	ADIW R30,1
000271 1f69      	ADC  R22,R25
000272 1f79      	ADC  R23,R25
000273 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000274 e850      	LDI  R21,0x80
000275 2757      	EOR  R21,R23
000276 f411      	BRNE __REPACK0
000277 935f      	PUSH R21
000278 c0c8      	RJMP __ZERORES
                 __REPACK0:
000279 3f5f      	CPI  R21,0xFF
00027a f031      	BREQ __REPACK1
00027b 0f66      	LSL  R22
00027c 0c00      	LSL  R0
00027d 9557      	ROR  R21
00027e 9567      	ROR  R22
00027f 2f75      	MOV  R23,R21
000280 9508      	RET
                 __REPACK1:
000281 935f      	PUSH R21
000282 2000      	TST  R0
000283 f00a      	BRMI __REPACK2
000284 c0c8      	RJMP __MAXRES
                 __REPACK2:
000285 c0c1      	RJMP __MINRES
                 
                 __UNPACK:
000286 e850      	LDI  R21,0x80
000287 2e19      	MOV  R1,R25
000288 2215      	AND  R1,R21
000289 0f88      	LSL  R24
00028a 1f99      	ROL  R25
00028b 2795      	EOR  R25,R21
00028c 0f55      	LSL  R21
00028d 9587      	ROR  R24
                 
                 __UNPACK1:
00028e e850      	LDI  R21,0x80
00028f 2e07      	MOV  R0,R23
000290 2205      	AND  R0,R21
000291 0f66      	LSL  R22
000292 1f77      	ROL  R23
000293 2775      	EOR  R23,R21
000294 0f55      	LSL  R21
000295 9567      	ROR  R22
000296 9508      	RET
                 
                 __CFD1U:
000297 9468      	SET
000298 c001      	RJMP __CFD1U0
                 __CFD1:
000299 94e8      	CLT
                 __CFD1U0:
00029a 935f      	PUSH R21
00029b dff2      	RCALL __UNPACK1
00029c 3870      	CPI  R23,0x80
00029d f018      	BRLO __CFD10
00029e 3f7f      	CPI  R23,0xFF
00029f f408      	BRCC __CFD10
0002a0 c0a0      	RJMP __ZERORES
                 __CFD10:
0002a1 e156      	LDI  R21,22
0002a2 1b57      	SUB  R21,R23
0002a3 f4aa      	BRPL __CFD11
0002a4 9551      	NEG  R21
0002a5 3058      	CPI  R21,8
0002a6 f40e      	BRTC __CFD19
0002a7 3059      	CPI  R21,9
                 __CFD19:
0002a8 f030      	BRLO __CFD17
0002a9 efef      	SER  R30
0002aa efff      	SER  R31
0002ab ef6f      	SER  R22
0002ac e77f      	LDI  R23,0x7F
0002ad f977      	BLD  R23,7
0002ae c01a      	RJMP __CFD15
                 __CFD17:
0002af 2777      	CLR  R23
0002b0 2355      	TST  R21
0002b1 f0b9      	BREQ __CFD15
                 __CFD18:
0002b2 0fee      	LSL  R30
0002b3 1fff      	ROL  R31
0002b4 1f66      	ROL  R22
0002b5 1f77      	ROL  R23
0002b6 955a      	DEC  R21
0002b7 f7d1      	BRNE __CFD18
0002b8 c010      	RJMP __CFD15
                 __CFD11:
0002b9 2777      	CLR  R23
                 __CFD12:
0002ba 3058      	CPI  R21,8
0002bb f028      	BRLO __CFD13
0002bc 2fef      	MOV  R30,R31
0002bd 2ff6      	MOV  R31,R22
0002be 2f67      	MOV  R22,R23
0002bf 5058      	SUBI R21,8
0002c0 cff9      	RJMP __CFD12
                 __CFD13:
0002c1 2355      	TST  R21
0002c2 f031      	BREQ __CFD15
                 __CFD14:
0002c3 9576      	LSR  R23
0002c4 9567      	ROR  R22
0002c5 95f7      	ROR  R31
0002c6 95e7      	ROR  R30
0002c7 955a      	DEC  R21
0002c8 f7d1      	BRNE __CFD14
                 __CFD15:
0002c9 2000      	TST  R0
0002ca f40a      	BRPL __CFD16
0002cb d0d1      	RCALL __ANEGD1
                 __CFD16:
0002cc 915f      	POP  R21
0002cd 9508      	RET
                 
                 __CDF1U:
0002ce 9468      	SET
0002cf c001      	RJMP __CDF1U0
                 __CDF1:
0002d0 94e8      	CLT
                 __CDF1U0:
0002d1 9730      	SBIW R30,0
0002d2 4060      	SBCI R22,0
0002d3 4070      	SBCI R23,0
0002d4 f0b1      	BREQ __CDF10
0002d5 2400      	CLR  R0
0002d6 f026      	BRTS __CDF11
0002d7 2377      	TST  R23
0002d8 f412      	BRPL __CDF11
0002d9 9400      	COM  R0
0002da d0c2      	RCALL __ANEGD1
                 __CDF11:
0002db 2e17      	MOV  R1,R23
0002dc e17e      	LDI  R23,30
0002dd 2011      	TST  R1
                 __CDF12:
0002de f032      	BRMI __CDF13
0002df 957a      	DEC  R23
0002e0 0fee      	LSL  R30
0002e1 1fff      	ROL  R31
0002e2 1f66      	ROL  R22
0002e3 1c11      	ROL  R1
0002e4 cff9      	RJMP __CDF12
                 __CDF13:
0002e5 2fef      	MOV  R30,R31
0002e6 2ff6      	MOV  R31,R22
0002e7 2d61      	MOV  R22,R1
0002e8 935f      	PUSH R21
0002e9 df8a      	RCALL __REPACK
0002ea 915f      	POP  R21
                 __CDF10:
0002eb 9508      	RET
                 
                 __SWAPACC:
0002ec 934f      	PUSH R20
0002ed 01af      	MOVW R20,R30
0002ee 01fd      	MOVW R30,R26
0002ef 01da      	MOVW R26,R20
0002f0 01ab      	MOVW R20,R22
0002f1 01bc      	MOVW R22,R24
0002f2 01ca      	MOVW R24,R20
0002f3 2d40      	MOV  R20,R0
0002f4 2c01      	MOV  R0,R1
0002f5 2e14      	MOV  R1,R20
0002f6 914f      	POP  R20
0002f7 9508      	RET
                 
                 __UADD12:
0002f8 0fea      	ADD  R30,R26
0002f9 1ffb      	ADC  R31,R27
0002fa 1f68      	ADC  R22,R24
0002fb 9508      	RET
                 
                 __NEGMAN1:
0002fc 95e0      	COM  R30
0002fd 95f0      	COM  R31
0002fe 9560      	COM  R22
0002ff 5fef      	SUBI R30,-1
000300 4fff      	SBCI R31,-1
000301 4f6f      	SBCI R22,-1
000302 9508      	RET
                 
                 __ADDF12:
000303 935f      	PUSH R21
000304 df81      	RCALL __UNPACK
000305 3890      	CPI  R25,0x80
000306 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000307 3870      	CPI  R23,0x80
000308 f121      	BREQ __ADDF128
                 __ADDF121:
000309 2f57      	MOV  R21,R23
00030a 1b59      	SUB  R21,R25
00030b f12b      	BRVS __ADDF1211
00030c f412      	BRPL __ADDF122
00030d dfde      	RCALL __SWAPACC
00030e cffa      	RJMP __ADDF121
                 __ADDF122:
00030f 3158      	CPI  R21,24
000310 f018      	BRLO __ADDF123
000311 27aa      	CLR  R26
000312 27bb      	CLR  R27
000313 2788      	CLR  R24
                 __ADDF123:
000314 3058      	CPI  R21,8
000315 f028      	BRLO __ADDF124
000316 2fab      	MOV  R26,R27
000317 2fb8      	MOV  R27,R24
000318 2788      	CLR  R24
000319 5058      	SUBI R21,8
00031a cff9      	RJMP __ADDF123
                 __ADDF124:
00031b 2355      	TST  R21
00031c f029      	BREQ __ADDF126
                 __ADDF125:
00031d 9586      	LSR  R24
00031e 95b7      	ROR  R27
00031f 95a7      	ROR  R26
000320 955a      	DEC  R21
000321 f7d9      	BRNE __ADDF125
                 __ADDF126:
000322 2d50      	MOV  R21,R0
000323 2551      	EOR  R21,R1
000324 f072      	BRMI __ADDF127
000325 dfd2      	RCALL __UADD12
000326 f438      	BRCC __ADDF129
000327 9567      	ROR  R22
000328 95f7      	ROR  R31
000329 95e7      	ROR  R30
00032a 9573      	INC  R23
00032b f413      	BRVC __ADDF129
00032c c020      	RJMP __MAXRES
                 __ADDF128:
00032d dfbe      	RCALL __SWAPACC
                 __ADDF129:
00032e df45      	RCALL __REPACK
00032f 915f      	POP  R21
000330 9508      	RET
                 __ADDF1211:
000331 f7d8      	BRCC __ADDF128
000332 cffb      	RJMP __ADDF129
                 __ADDF127:
000333 1bea      	SUB  R30,R26
000334 0bfb      	SBC  R31,R27
000335 0b68      	SBC  R22,R24
000336 f051      	BREQ __ZERORES
000337 f410      	BRCC __ADDF1210
000338 9400      	COM  R0
000339 dfc2      	RCALL __NEGMAN1
                 __ADDF1210:
00033a 2366      	TST  R22
00033b f392      	BRMI __ADDF129
00033c 0fee      	LSL  R30
00033d 1fff      	ROL  R31
00033e 1f66      	ROL  R22
00033f 957a      	DEC  R23
000340 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000341 27ee      	CLR  R30
000342 27ff      	CLR  R31
000343 2766      	CLR  R22
000344 2777      	CLR  R23
000345 915f      	POP  R21
000346 9508      	RET
                 
                 __MINRES:
000347 efef      	SER  R30
000348 efff      	SER  R31
000349 e76f      	LDI  R22,0x7F
00034a ef7f      	SER  R23
00034b 915f      	POP  R21
00034c 9508      	RET
                 
                 __MAXRES:
00034d efef      	SER  R30
00034e efff      	SER  R31
00034f e76f      	LDI  R22,0x7F
000350 e77f      	LDI  R23,0x7F
000351 915f      	POP  R21
000352 9508      	RET
                 
                 __DIVF21:
000353 935f      	PUSH R21
000354 df31      	RCALL __UNPACK
000355 3870      	CPI  R23,0x80
000356 f421      	BRNE __DIVF210
000357 2011      	TST  R1
                 __DIVF211:
000358 f40a      	BRPL __DIVF219
000359 cfed      	RJMP __MINRES
                 __DIVF219:
00035a cff2      	RJMP __MAXRES
                 __DIVF210:
00035b 3890      	CPI  R25,0x80
00035c f409      	BRNE __DIVF218
                 __DIVF217:
00035d cfe3      	RJMP __ZERORES
                 __DIVF218:
00035e 2401      	EOR  R0,R1
00035f 9408      	SEC
000360 0b97      	SBC  R25,R23
000361 f41b      	BRVC __DIVF216
000362 f3d4      	BRLT __DIVF217
000363 2000      	TST  R0
000364 cff3      	RJMP __DIVF211
                 __DIVF216:
000365 2f79      	MOV  R23,R25
000366 931f      	PUSH R17
000367 932f      	PUSH R18
000368 933f      	PUSH R19
000369 934f      	PUSH R20
00036a 2411      	CLR  R1
00036b 2711      	CLR  R17
00036c 2722      	CLR  R18
00036d 2733      	CLR  R19
00036e 2744      	CLR  R20
00036f 2755      	CLR  R21
000370 e290      	LDI  R25,32
                 __DIVF212:
000371 17ae      	CP   R26,R30
000372 07bf      	CPC  R27,R31
000373 0786      	CPC  R24,R22
000374 0741      	CPC  R20,R17
000375 f030      	BRLO __DIVF213
000376 1bae      	SUB  R26,R30
000377 0bbf      	SBC  R27,R31
000378 0b86      	SBC  R24,R22
000379 0b41      	SBC  R20,R17
00037a 9408      	SEC
00037b c001      	RJMP __DIVF214
                 __DIVF213:
00037c 9488      	CLC
                 __DIVF214:
00037d 1f55      	ROL  R21
00037e 1f22      	ROL  R18
00037f 1f33      	ROL  R19
000380 1c11      	ROL  R1
000381 1faa      	ROL  R26
000382 1fbb      	ROL  R27
000383 1f88      	ROL  R24
000384 1f44      	ROL  R20
000385 959a      	DEC  R25
000386 f751      	BRNE __DIVF212
000387 01f9      	MOVW R30,R18
000388 2d61      	MOV  R22,R1
000389 914f      	POP  R20
00038a 913f      	POP  R19
00038b 912f      	POP  R18
00038c 911f      	POP  R17
00038d 2366      	TST  R22
00038e f032      	BRMI __DIVF215
00038f 0f55      	LSL  R21
000390 1fee      	ROL  R30
000391 1fff      	ROL  R31
000392 1f66      	ROL  R22
000393 957a      	DEC  R23
000394 f243      	BRVS __DIVF217
                 __DIVF215:
000395 ded4      	RCALL __ROUND_REPACK
000396 915f      	POP  R21
000397 9508      	RET
                 
                 __ADDD12:
000398 0fea      	ADD  R30,R26
000399 1ffb      	ADC  R31,R27
00039a 1f68      	ADC  R22,R24
00039b 1f79      	ADC  R23,R25
00039c 9508      	RET
                 
                 __ANEGD1:
00039d 95f0      	COM  R31
00039e 9560      	COM  R22
00039f 9570      	COM  R23
0003a0 95e1      	NEG  R30
0003a1 4fff      	SBCI R31,-1
0003a2 4f6f      	SBCI R22,-1
0003a3 4f7f      	SBCI R23,-1
0003a4 9508      	RET
                 
                 __PUTDP1:
0003a5 93ed      	ST   X+,R30
0003a6 93fd      	ST   X+,R31
0003a7 936d      	ST   X+,R22
0003a8 937c      	ST   X,R23
0003a9 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  18 r1 :  15 r2 :   0 r3 :   0 r4 :   2 r5 :   2 r6 :   4 r7 :   4 
r8 :   2 r9 :   4 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:  12 r18:   5 r19:   4 r20:  14 r21:  51 r22:  61 r23:  50 
r24:  35 r25:  25 r26:  55 r27:  26 r28:   4 r29:   1 r30: 161 r31:  69 
x  :  11 y  :  53 z  :   9 
Registers used: 26 out of 35 (74.3%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   7 add   :   4 
adiw  :   8 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  14 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   1 brmi  :   5 brne  :  18 brpl  :   7 brsh  :   0 brtc  :   1 
brts  :   3 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 cbi   :  10 
cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 clr   :  26 
cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :  10 cp    :   3 
cpc   :   4 cpi   :  17 cpse  :   0 dec   :  10 des   :   0 eor   :   5 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :  12 
inc   :   6 ld    :  18 ldd   :   9 ldi   :  93 lds   :  28 lpm   :   9 
lsl   :  10 lsr   :   3 mov   :  29 movw  :  10 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   2 ori   :   2 out   :  21 
pop   :  14 push  :  13 rcall : 107 ret   :  36 reti  :   1 rjmp  :  57 
rol   :  21 ror   :  12 sbc   :   7 sbci  :   8 sbi   :  11 sbic  :   0 
sbis  :   1 sbiw  :   8 sbr   :   0 sbrc  :   1 sbrs  :   1 sec   :   2 
seh   :   0 sei   :   1 sen   :   0 ser   :   8 ses   :   0 set   :   4 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  34 std   :   4 
sts   :  30 sub   :   5 subi  :   7 swap  :   2 tst   :  13 wdr   :   1 

Instructions used: 71 out of 114 (62.3%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000754   1814     62   1876    8192  22.9%
[.dseg] 0x000060 0x00019a      0     58     58    1024   5.7%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 8 warnings
