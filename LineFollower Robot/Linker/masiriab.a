;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;// Declare your global variables here
;unsigned char sensd;
;//**********************
;void forward (void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0008 PORTC=0b001010;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0009 }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;//**********************
;void left (void)
; 0000 000C {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000D PORTC=0b001001;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 000E }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;//**********************
;void right (void)
; 0000 0011 {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0012 PORTC=0b000110;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0013 }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;//*********************
;void main(void)
; 0000 0016 {
;PCODE: $0000001F VOL: 0
; 0000 0017 // Declare your local variables here
; 0000 0018 // Input/Output Ports initialization
; 0000 0019 // Port B initialization
; 0000 001A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 001B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 001C PORTB=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 001D DDRB=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001E // Port C initialization
; 0000 001F // Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0020 // State6=T State5=T State4=T State3=0 State2=0 State1=0 State0=0
; 0000 0021 PORTC=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0022 DDRC=0x0F;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0023 // Port D initialization
; 0000 0024 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0025 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0026 PORTD=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0027 DDRD=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0028 // Timer/Counter 0 initialization
; 0000 0029 // Clock source: System Clock
; 0000 002A // Clock value: Timer 0 Stopped
; 0000 002B TCCR0=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002C TCNT0=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002D // Timer/Counter 1 initialization
; 0000 002E // Clock source: System Clock
; 0000 002F // Clock value: Timer 1 Stopped
; 0000 0030 // Mode: Normal top=FORWARDFORWARDh
; 0000 0031 // OC1A output: Discon.
; 0000 0032 // OC1B output: Discon.
; 0000 0033 // Noise Canceler: Oforward
; 0000 0034 // Input Capture on Falefting Edge
; 0000 0035 // Timer 1 Overflow Interightupt: Oforward
; 0000 0036 // Input Capture Interightupt: Oforward
; 0000 0037 // Compare A Match Interightupt: Oforward
; 0000 0038 // Compare B Match Interightupt: Oforward
; 0000 0039 TCCR1A=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 003A TCCR1B=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003B TCNT1H=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 003C TCNT1L=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 003D ICR1H=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 003E ICR1L=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003F OCR1AH=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0040 OCR1AL=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0041 OCR1BH=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0042 OCR1BL=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0043 // Timer/Counter 2 initialization
; 0000 0044 // Clock source: System Clock
; 0000 0045 // Clock value: Timer 2 Stopped
; 0000 0046 // Mode: Normal top=FORWARDh
; 0000 0047 // OC2 output: Disconnected
; 0000 0048 ASSR=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0049 TCCR2=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004A TCNT2=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 004B OCR2=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 004C // External Interightupt(s) initialization
; 0000 004D // INT0: Oforward
; 0000 004E // INT1: Oforward
; 0000 004F MCUCR=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0050 // Timer(s)/Counter(s) Interightupt(s) initialization
; 0000 0051 TIMSK=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0052 // Analog Comparator initialization
; 0000 0053 // Analog Comparator: Oforward
; 0000 0054 // Analog Comparator Input Capture by Timer/Counter 1: Oforward
; 0000 0055 ACSR=0x80;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0056 SFIOR=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0057 while (1)
;PCODE: $00000054 VOL: 0
; 0000 0058 {
; 0000 0059 // Place your code here
; 0000 005A sensd=0b00011111;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 005B sensd=PIND&sensd;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 005C if(sensd==0b00000100)
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 005D forward();
;PCODE: $0000005D VOL: 0
; 0000 005E if(sensd==0b00001110)
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 005F forward();
;PCODE: $00000062 VOL: 0
; 0000 0060 if(sensd==0b00001100)
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0061 right();
;PCODE: $00000067 VOL: 0
; 0000 0062 if(sensd==0b00001000)
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0063 right();
;PCODE: $0000006C VOL: 0
; 0000 0064 if(sensd==0b00010000)
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0065 right();
;PCODE: $00000071 VOL: 0
; 0000 0066 if(sensd==0b00011000)
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0067 right();
;PCODE: $00000076 VOL: 0
; 0000 0068 if(sensd==0b00011100)
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0069 right();
;PCODE: $0000007B VOL: 0
; 0000 006A if(sensd==0b00000001)
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006B left();
;PCODE: $00000080 VOL: 0
; 0000 006C if(sensd==0b00000011)
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 006D left();
;PCODE: $00000085 VOL: 0
; 0000 006E if(sensd==0b00000111)
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 006F left();
;PCODE: $0000008A VOL: 0
; 0000 0070 if(sensd==0b00000110)
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0071 left();
;PCODE: $0000008F VOL: 0
; 0000 0072 if(sensd==0b00000010)
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0073 left();
;PCODE: $00000094 VOL: 0
; 0000 0074 //TAGHIR RANG
; 0000 0075 if(sensd==0b11111011)
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0076 forward();
;PCODE: $00000099 VOL: 0
; 0000 0077 if(sensd==0b11110001)
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0078 forward();
;PCODE: $0000009E VOL: 0
; 0000 0079 if(sensd==0b11110011)
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 007A right();
;PCODE: $000000A3 VOL: 0
; 0000 007B if(sensd==0b11110111)
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 007C right();
;PCODE: $000000A8 VOL: 0
; 0000 007D if(sensd==0b11101111)
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 007E right();
;PCODE: $000000AD VOL: 0
; 0000 007F if(sensd==0b11100111)
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0080 right();
;PCODE: $000000B2 VOL: 0
; 0000 0081 if(sensd==0b11100011)
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0082 right();
;PCODE: $000000B7 VOL: 0
; 0000 0083 if(sensd==0b11111110)
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0084 left();
;PCODE: $000000BC VOL: 0
; 0000 0085 if(sensd==0b11111100)
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0086 left();
;PCODE: $000000C1 VOL: 0
; 0000 0087 if(sensd==0b11111000)
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0088 left();
;PCODE: $000000C6 VOL: 0
; 0000 0089 if(sensd==0b11111001)
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 008A left();
;PCODE: $000000CB VOL: 0
; 0000 008B if(sensd==0b11111101)
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 008C left();
;PCODE: $000000D0 VOL: 0
; 0000 008D };
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 008E }
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
