
AVRASM ver. 2.1.30  D:\avr(codevision)\intrrupt\List\int.asm Thu Dec 23 11:13:04 2010

D:\avr(codevision)\intrrupt\List\int.asm(1051): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : No
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 0036 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 00c1 	JMP  _key_seg
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x3:
00002a 063f
00002b 4f5b
00002c 6d66
00002d 077d      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7D,0x7
00002e 6f7f
00002f 7c77
000030 5e39
000031 7179      	.DB  0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71
                 
                 __GLOBAL_INI_TBL:
000032 0010      	.DW  0x10
000033 0260      	.DW  _num
000034 0054      	.DW  _0x3*2
                 
                 _0xFFFFFFFF:
000035 0000      	.DW  0
                 
                 __RESET:
000036 94f8      	CLI
000037 27ee      	CLR  R30
000038 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000039 e0f1      	LDI  R31,1
00003a bffb      	OUT  GICR,R31
00003b bfeb      	OUT  GICR,R30
00003c bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00003d e1f8      	LDI  R31,0x18
00003e bdf1      	OUT  WDTCR,R31
00003f bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000040 e08d      	LDI  R24,(14-2)+1
000041 e0a2      	LDI  R26,2
000042 27bb      	CLR  R27
                 __CLEAR_REG:
000043 93ed      	ST   X+,R30
000044 958a      	DEC  R24
000045 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000046 e080      	LDI  R24,LOW(0x800)
000047 e098      	LDI  R25,HIGH(0x800)
000048 e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
000049 93ed      	ST   X+,R30
00004a 9701      	SBIW R24,1
00004b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004c e6e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00004e 9185      	LPM  R24,Z+
00004f 9195      	LPM  R25,Z+
000050 9700      	SBIW R24,0
000051 f061      	BREQ __GLOBAL_INI_END
000052 91a5      	LPM  R26,Z+
000053 91b5      	LPM  R27,Z+
000054 9005      	LPM  R0,Z+
000055 9015      	LPM  R1,Z+
000056 01bf      	MOVW R22,R30
000057 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000058 9005      	LPM  R0,Z+
000059 920d      	ST   X+,R0
00005a 9701      	SBIW R24,1
00005b f7e1      	BRNE __GLOBAL_INI_LOOP
00005c 01fb      	MOVW R30,R22
00005d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;STACK POINTER INITIALIZATION
00005e e5ef      	LDI  R30,LOW(0x85F)
00005f bfed      	OUT  SPL,R30
000060 e0e8      	LDI  R30,HIGH(0x85F)
000061 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000062 e6c0      	LDI  R28,LOW(0x260)
000063 e0d2      	LDI  R29,HIGH(0x260)
                 
000064 940c 00e2 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;char num[16]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,
                 ;0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71};
                 
                 	.DSEG
                 ;unsigned char i;
                 ;unsigned char kbd_get(void);
                 ;void kbd_init(void);
                 ;void kbd_init()
                 ; 0000 0009 {
                 
                 	.CSEG
                 _kbd_init:
                 ; 0000 000A DDRC=0xf0;
000066 efe0      	LDI  R30,LOW(240)
000067 bbe4      	OUT  0x14,R30
                 ; 0000 000B PORTC=0x0f;
000068 e0ef      	LDI  R30,LOW(15)
000069 bbe5      	OUT  0x15,R30
                 ; 0000 000C }
00006a 9508      	RET
                 ;
                 ;
                 ;
                 ;unsigned char kbd_get()
                 ; 0000 0011 {
                 _kbd_get:
                 ; 0000 0012 unsigned char kbd_in;
                 ; 0000 0013 unsigned char kbd_num;
                 ; 0000 0014 //scanning first row.
                 ; 0000 0015 
                 ; 0000 0016 PORTC=0xef;
00006b 931a      	ST   -Y,R17
00006c 930a      	ST   -Y,R16
                 ;	kbd_in -> R17
                 ;	kbd_num -> R16
00006d eeef      	LDI  R30,LOW(239)
00006e d0b0      	RCALL SUBOPT_0x0
                 ; 0000 0017 delay_us(10);
                 ; 0000 0018 kbd_in=PINC & 0x0f;
                 ; 0000 0019 if(kbd_in!=0x0f)
00006f f089      	BREQ _0x4
                 ; 0000 001A {
                 ; 0000 001B  switch(kbd_in)
000070 2fe1      	MOV  R30,R17
                 ; 0000 001C  {
                 ; 0000 001D   case 0x0e:kbd_num=7;goto exit_fcn;break;
000071 30ee      	CPI  R30,LOW(0xE)
000072 f411      	BRNE _0x8
000073 e007      	LDI  R16,LOW(7)
000074 c047      	RJMP _0x9
                 ; 0000 001E   case 0x0d:kbd_num=4;goto exit_fcn;break;
                 _0x8:
000075 30ed      	CPI  R30,LOW(0xD)
000076 f411      	BRNE _0xA
000077 e004      	LDI  R16,LOW(4)
000078 c043      	RJMP _0x9
                 ; 0000 001F   case 0x0b:kbd_num=1;goto exit_fcn;break;
                 _0xA:
000079 30eb      	CPI  R30,LOW(0xB)
00007a f411      	BRNE _0xB
00007b e001      	LDI  R16,LOW(1)
00007c c03f      	RJMP _0x9
                 ; 0000 0020   case 0x07:kbd_num=10;goto exit_fcn;break;
                 _0xB:
00007d 30e7      	CPI  R30,LOW(0x7)
00007e f411      	BRNE _0x7
00007f e00a      	LDI  R16,LOW(10)
000080 c03b      	RJMP _0x9
                 ; 0000 0021  }
                 _0x7:
                 ; 0000 0022 
                 ; 0000 0023 }
                 ; 0000 0024 //scanning second row.
                 ; 0000 0025 PORTC=0xdf;
                 _0x4:
000081 edef      	LDI  R30,LOW(223)
000082 d09c      	RCALL SUBOPT_0x0
                 ; 0000 0026 delay_us(10);
                 ; 0000 0027 kbd_in=PINC & 0x0f;
                 ; 0000 0028 if(kbd_in!=0x0f)
000083 f079      	BREQ _0xD
                 ; 0000 0029 {
                 ; 0000 002A  switch(kbd_in)
000084 2fe1      	MOV  R30,R17
                 ; 0000 002B  {
                 ; 0000 002C   case 0x0e:kbd_num=8;goto exit_fcn;break;
000085 30ee      	CPI  R30,LOW(0xE)
000086 f411      	BRNE _0x11
000087 e008      	LDI  R16,LOW(8)
000088 c033      	RJMP _0x9
                 ; 0000 002D   case 0x0d:kbd_num=5;goto exit_fcn;break;
                 _0x11:
000089 30ed      	CPI  R30,LOW(0xD)
00008a f411      	BRNE _0x12
00008b e005      	LDI  R16,LOW(5)
00008c c02f      	RJMP _0x9
                 ; 0000 002E   case 0x0b:kbd_num=2;goto exit_fcn;break;
                 _0x12:
00008d 30eb      	CPI  R30,LOW(0xB)
00008e f411      	BRNE _0x13
00008f e002      	LDI  R16,LOW(2)
000090 c02b      	RJMP _0x9
                 ; 0000 002F   case 0x07:kbd_num=0;goto exit_fcn;break;
                 _0x13:
000091 30e7      	CPI  R30,LOW(0x7)
000092 f141      	BREQ _0x29
                 ; 0000 0030  }
                 ; 0000 0031 }
                 ; 0000 0032 //scanning third row.
                 ; 0000 0033 PORTC=0xbf;
                 _0xD:
000093 ebef      	LDI  R30,LOW(191)
000094 d08a      	RCALL SUBOPT_0x0
                 ; 0000 0034 delay_us(10);
                 ; 0000 0035 kbd_in=PINC & 0x0f;
                 ; 0000 0036 if(kbd_in!=0x0f)
000095 f089      	BREQ _0x15
                 ; 0000 0037 {
                 ; 0000 0038  switch(kbd_in)
000096 2fe1      	MOV  R30,R17
                 ; 0000 0039  {
                 ; 0000 003A   case 0x0e:kbd_num=9;goto exit_fcn;break;
000097 30ee      	CPI  R30,LOW(0xE)
000098 f411      	BRNE _0x19
000099 e009      	LDI  R16,LOW(9)
00009a c021      	RJMP _0x9
                 ; 0000 003B   case 0x0d:kbd_num=6;goto exit_fcn;break;
                 _0x19:
00009b 30ed      	CPI  R30,LOW(0xD)
00009c f411      	BRNE _0x1A
00009d e006      	LDI  R16,LOW(6)
00009e c01d      	RJMP _0x9
                 ; 0000 003C   case 0x0b:kbd_num=3;goto exit_fcn;break;
                 _0x1A:
00009f 30eb      	CPI  R30,LOW(0xB)
0000a0 f411      	BRNE _0x1B
0000a1 e003      	LDI  R16,LOW(3)
0000a2 c019      	RJMP _0x9
                 ; 0000 003D   case 0x07:kbd_num=11;goto exit_fcn;break;
                 _0x1B:
0000a3 30e7      	CPI  R30,LOW(0x7)
0000a4 f411      	BRNE _0x18
0000a5 e00b      	LDI  R16,LOW(11)
0000a6 c015      	RJMP _0x9
                 ; 0000 003E  }
                 _0x18:
                 ; 0000 003F }
                 ; 0000 0040 //scanning fourth row.
                 ; 0000 0041 PORTC=0x7f;
                 _0x15:
0000a7 e7ef      	LDI  R30,LOW(127)
0000a8 d076      	RCALL SUBOPT_0x0
                 ; 0000 0042 delay_us(10);
                 ; 0000 0043 kbd_in=PINC & 0x0f;
                 ; 0000 0044 if(kbd_in!=0x0f)
0000a9 f089      	BREQ _0x1D
                 ; 0000 0045 {
                 ; 0000 0046  switch(kbd_in)
0000aa 2fe1      	MOV  R30,R17
                 ; 0000 0047  {
                 ; 0000 0048   case 0x0e:kbd_num=12;goto exit_fcn;break;
0000ab 30ee      	CPI  R30,LOW(0xE)
0000ac f411      	BRNE _0x21
0000ad e00c      	LDI  R16,LOW(12)
0000ae c00d      	RJMP _0x9
                 ; 0000 0049   case 0x0d:kbd_num=13;goto exit_fcn;break;
                 _0x21:
0000af 30ed      	CPI  R30,LOW(0xD)
0000b0 f411      	BRNE _0x22
0000b1 e00d      	LDI  R16,LOW(13)
0000b2 c009      	RJMP _0x9
                 ; 0000 004A   case 0x0b:kbd_num=14;goto exit_fcn;break;
                 _0x22:
0000b3 30eb      	CPI  R30,LOW(0xB)
0000b4 f411      	BRNE _0x23
0000b5 e00e      	LDI  R16,LOW(14)
0000b6 c005      	RJMP _0x9
                 ; 0000 004B   case 0x07:kbd_num=15;goto exit_fcn;break;
                 _0x23:
0000b7 30e7      	CPI  R30,LOW(0x7)
0000b8 f411      	BRNE _0x20
0000b9 e00f      	LDI  R16,LOW(15)
0000ba c001      	RJMP _0x9
                 ; 0000 004C  }
                 _0x20:
                 ; 0000 004D }
                 ; 0000 004E kbd_num=0;
                 _0x1D:
                 _0x29:
0000bb e000      	LDI  R16,LOW(0)
                 ; 0000 004F exit_fcn:
                 _0x9:
                 ; 0000 0050 kbd_init();
0000bc dfa9      	RCALL _kbd_init
                 ; 0000 0051 return(kbd_num);
0000bd 2fe0      	MOV  R30,R16
0000be 9109      	LD   R16,Y+
0000bf 9119      	LD   R17,Y+
0000c0 9508      	RET
                 ; 0000 0052 }
                 ;interrupt [19] void key_seg (void)
                 ; 0000 0054 {  //PORTA=num[12];
                 _key_seg:
0000c1 920a      	ST   -Y,R0
0000c2 921a      	ST   -Y,R1
0000c3 92fa      	ST   -Y,R15
0000c4 936a      	ST   -Y,R22
0000c5 937a      	ST   -Y,R23
0000c6 938a      	ST   -Y,R24
0000c7 939a      	ST   -Y,R25
0000c8 93aa      	ST   -Y,R26
0000c9 93ba      	ST   -Y,R27
0000ca 93ea      	ST   -Y,R30
0000cb 93fa      	ST   -Y,R31
0000cc b7ef      	IN   R30,SREG
0000cd 93ea      	ST   -Y,R30
                 ; 0000 0055 PORTA=num[kbd_get()] ;
0000ce df9c      	RCALL _kbd_get
0000cf d058      	RCALL SUBOPT_0x1
0000d0 bbeb      	OUT  0x1B,R30
                 ; 0000 0056 delay_ms(1000);
0000d1 eee8      	LDI  R30,LOW(1000)
0000d2 e0f3      	LDI  R31,HIGH(1000)
0000d3 d059      	RCALL SUBOPT_0x2
                 ; 0000 0057 
                 ; 0000 0058 
                 ; 0000 0059 }
0000d4 91e9      	LD   R30,Y+
0000d5 bfef      	OUT  SREG,R30
0000d6 91f9      	LD   R31,Y+
0000d7 91e9      	LD   R30,Y+
0000d8 91b9      	LD   R27,Y+
0000d9 91a9      	LD   R26,Y+
0000da 9199      	LD   R25,Y+
0000db 9189      	LD   R24,Y+
0000dc 9179      	LD   R23,Y+
0000dd 9169      	LD   R22,Y+
0000de 90f9      	LD   R15,Y+
0000df 9019      	LD   R1,Y+
0000e0 9009      	LD   R0,Y+
0000e1 9518      	RETI
                 ;void main()
                 ; 0000 005B {    DDRD=0x00;
                 _main:
0000e2 e0e0      	LDI  R30,LOW(0)
0000e3 bbe1      	OUT  0x11,R30
                 ; 0000 005C PORTD=0xff;
0000e4 efef      	LDI  R30,LOW(255)
0000e5 bbe2      	OUT  0x12,R30
                 ; 0000 005D DDRA=0xff;
0000e6 bbea      	OUT  0x1A,R30
                 ; 0000 005E PORTA=0x00;
0000e7 e0e0      	LDI  R30,LOW(0)
0000e8 bbeb      	OUT  0x1B,R30
                 ; 0000 005F DDRC=0xf0;
0000e9 efe0      	LDI  R30,LOW(240)
0000ea bbe4      	OUT  0x14,R30
                 ; 0000 0060 PORTC=0x0f;
0000eb e0ef      	LDI  R30,LOW(15)
0000ec bbe5      	OUT  0x15,R30
                 ; 0000 0061 DDRB=0x00;
0000ed e0e0      	LDI  R30,LOW(0)
0000ee bbe7      	OUT  0x17,R30
                 ; 0000 0062 PORTB=0x00;
0000ef bbe8      	OUT  0x18,R30
                 ; 0000 0063 GICR=0b00100000;
0000f0 e2e0      	LDI  R30,LOW(32)
0000f1 bfeb      	OUT  0x3B,R30
                 ; 0000 0064 MCUCSR=0b00000000;
0000f2 e0e0      	LDI  R30,LOW(0)
0000f3 bfe4      	OUT  0x34,R30
                 ; 0000 0065 i=0;
0000f4 2455      	CLR  R5
                 ; 0000 0066 #asm("sei")
0000f5 9478      	sei
                 ; 0000 0067 while(1)
                 _0x25:
                 ; 0000 0068 {
                 ; 0000 0069 PORTA=num[13];
                +
0000f6 91e0 026d+LDS R30 , _num + ( 13 )
                 	__GETB1MN _num,13
0000f8 bbeb      	OUT  0x1B,R30
                 ; 0000 006A delay_ms(20);
0000f9 e1e4      	LDI  R30,LOW(20)
0000fa e0f0      	LDI  R31,HIGH(20)
0000fb d031      	RCALL SUBOPT_0x2
                 ; 0000 006B i=  PIND.0 +(PIND.1*2)+(PIND.2*4)+(PIND.3*8) ;
0000fc e0e0      	LDI  R30,0
0000fd 9980      	SBIC 0x10,0
0000fe e0e1      	LDI  R30,1
0000ff 2f6e      	MOV  R22,R30
000100 e0a0      	LDI  R26,0
000101 9981      	SBIC 0x10,1
000102 e0a1      	LDI  R26,1
000103 e0e2      	LDI  R30,LOW(2)
000104 9fea      	MUL  R30,R26
000105 01f0      	MOVW R30,R0
000106 0f6e      	ADD  R22,R30
000107 e0a0      	LDI  R26,0
000108 9982      	SBIC 0x10,2
000109 e0a1      	LDI  R26,1
00010a e0e4      	LDI  R30,LOW(4)
00010b 9fea      	MUL  R30,R26
00010c 01f0      	MOVW R30,R0
00010d 0f6e      	ADD  R22,R30
00010e e0a0      	LDI  R26,0
00010f 9983      	SBIC 0x10,3
000110 e0a1      	LDI  R26,1
000111 e0e8      	LDI  R30,LOW(8)
000112 9fea      	MUL  R30,R26
000113 01f0      	MOVW R30,R0
000114 0fe6      	ADD  R30,R22
000115 2e5e      	MOV  R5,R30
                 ; 0000 006C PORTA=num[i] | 0x80;
000116 2de5      	MOV  R30,R5
000117 d010      	RCALL SUBOPT_0x1
000118 68e0      	ORI  R30,0x80
000119 bbeb      	OUT  0x1B,R30
                 ; 0000 006D delay_ms(20);
00011a e1e4      	LDI  R30,LOW(20)
00011b e0f0      	LDI  R31,HIGH(20)
00011c d010      	RCALL SUBOPT_0x2
                 ; 0000 006E }
00011d cfd8      	RJMP _0x25
                 ; 0000 006F }
                 _0x28:
00011e cfff      	RJMP _0x28
                 ;
                 
                 	.DSEG
                 _num:
000260           	.BYTE 0x10
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x0:
00011f bbe5      	OUT  0x15,R30
                +
000120 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000121 958a     +DEC R24
000122 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000123 b3e3      	IN   R30,0x13
000124 70ef      	ANDI R30,LOW(0xF)
000125 2f1e      	MOV  R17,R30
000126 301f      	CPI  R17,15
000127 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000128 e0f0      	LDI  R31,0
000129 5ae0      	SUBI R30,LOW(-_num)
00012a 4ffd      	SBCI R31,HIGH(-_num)
00012b 81e0      	LD   R30,Z
00012c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00012d 93fa      	ST   -Y,R31
00012e 93ea      	ST   -Y,R30
00012f 940c 0131 	JMP  _delay_ms
                 
                 
                 	.CSEG
                 _delay_ms:
000131 91e9      	ld   r30,y+
000132 91f9      	ld   r31,y+
000133 9630      	adiw r30,0
000134 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000135 ed80     +LDI R24 , LOW ( 0x7D0 )
000136 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000137 9701     +SBIW R24 , 1
000138 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000139 95a8      	wdr
00013a 9731      	sbiw r30,1
00013b f7c9      	brne __delay_ms0
                 __delay_ms1:
00013c 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   9 r1 :   3 r2 :   0 r3 :   0 r4 :   0 r5 :   3 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  19 r17:   8 r18:   0 r19:   0 r20:   0 r21:   0 r22:   8 r23:   2 
r24:  13 r25:   5 r26:  14 r27:   4 r28:   1 r29:   1 r30: 103 r31:  14 
x  :   3 y  :  32 z  :   8 
Registers used: 19 out of 35 (54.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   3 
adiw  :   1 and   :   0 andi  :   1 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   7 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  21 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   3 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   0 cpc   :   0 cpi   :  17 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  23 ld    :  17 ldd   :   0 ldi   :  64 
lds   :   1 lpm   :   7 lsl   :   0 lsr   :   0 mov   :   9 movw  :   6 
mul   :   3 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   1 out   :  25 pop   :   0 push  :   0 rcall :  11 ret   :   5 
reti  :   1 rjmp  :  18 rol   :   0 ror   :   0 sbc   :   0 sbci  :   1 
sbi   :   0 sbic  :   4 sbis  :   0 sbiw  :   5 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  19 std   :   0 sts   :   0 sub   :   0 subi  :   1 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 31 out of 116 (26.7%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00027a    610     24    634   32768   1.9%
[.dseg] 0x000060 0x000270      0     16     16    2048   0.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 1 warnings
